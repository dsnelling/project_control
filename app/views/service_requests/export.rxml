xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
xml.Workbook({
  'xmlns'   => "urn:schemas-microsoft-com:office:spreadsheet",
  'xmlns:o' => "urn:schemas-microsoft-com:office:office",
  'xmlns:x' => "urn:schemas=microsoft-com:office:excel",
  'xmlns:html' => "http://www.w3.org/TR/REC-html40",
  'xmlns:ss' => "urn:schemas-microsoft-com:office:spreadsheet"
  }) do

xml.Styles do
  xml.Style 'ss:ID' => 'Default', 'ss:Name' => 'Normal' do
    xml.Alignment 'ss:Vertical' => 'Bottom'
    xml.Borders
    xml.Font 'ss:FontName' => 'Verdana'
    xml.Interior
    xml.NumberFormat
    xml.Protection
  end
  xml.Style 'ss:ID' => 's22' do
    xml.NumberFormat 'ss:Format' => 'GeneralDate'
  end
  xml.Style 'ss:ID' => 's23' do
    xml.Borders do
      xml.Border 'ss:Position' => 'Bottom', 'ss:LineStyle' => 'Continuous',
        'ss:Weight' => '1'
    end
    xml.Font 'ss:Bold' => '1'
    xml.Interior 'ss:Color' => '#C0C0C0', 'ss:Pattern' => 'Solid'
  end
end

xml.Worksheet 'ss:Name' => 'ServiceRequest' do
  xml.Table do
    #header
    xml.Row do
      for column in ServiceRequest.content_columns do
        xml.Cell 'ss:StyleID' => 's23' do
          xml.Data column.human_name, 'ss:Type' => 'String'
        end
      end
      xml.Cell 'ss:StyleID' => 's23' do
        xml.Data 'Actual Cost', 'ss:Type' => 'String'
      end
    end

    #rows
    for service_request in @service_requests do
      xml.Row do
        for column in ServiceRequest.content_columns do
          xml.Cell do
            xml.Data service_request.send(column.name).to_s,
              'ss:Type' => 'String'
          end
        end
        xml.Cell do
          xml.Data service_request.service_reports.
            where("status <> 'Rejected'").sum(:actual_cost).to_s,
              'ss:Type' => 'String'
        end
      end
    end

  end
end

end



